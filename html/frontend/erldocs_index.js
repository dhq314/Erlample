var index = [
	['mod', 'application', '通用 OTP 应用函数'],
	['mod', 'array', '函数式且可扩展的数组'],
	['mod', 'asn1rt', '抽象语法标记运行时支持函数'],
	['mod', 'base64', 'base64 编码和解码的实现'],
	['mod', 'binary', '处理二进制数据的函数库'],
	['mod', 'calendar', 'Erlang 的时间日期格式处理转换函数库'],
	['mod', 'code', 'Erlang 的代码服务函数'],
	['mod', 'dbg', '基于文本的跟踪工具'],
	['mod', 'dict', '一个键值（Key-Value）字典的实现'],
	['mod', 'erlang', 'Erlang 的内置函数（built-in function）'],
	['mod', 'ets', '内建的变量存储机制'],
	['mod', 'file', '文件接口模块'],
	['mod', 'filelib', '文件操作的一些常用工具函数'],
	['mod', 'filename', '文件名操作函数'],
	['mod', 'gb_trees', '通用平衡树（General Balanced Trees）'],
	['mod', 'gen_tcp', 'TCP/IP 套接字接口'],
	['mod', 'inet', 'TCP/IP 协议处理函数'],
	['mod', 'io', '标准输入输出（I/O）服务接口函数'],
	['mod', 'lists', '列表处理函数'],
	['mod', 'make', 'Erlang 的代码编译函数库'],
	['mod', 'maps', '映射组（map）处理函数'],
	['mod', 'math', '数学函数'],
	['mod', 'mnesia', '一个分布式数据库管理系统（Database Management System, DBMS）'],
	['mod', 'net_adm', 'Erlang 的网络管理功能'],
	['mod', 'os', '特定操作系统相关的函数'],
	['mod', 'proplists', '属性列表操作函数'],
	['mod', 'random', '伪随机数生成'],
	['mod', 're', 'Erlang 的 Perl 风格正则表达式'],
	['mod', 'rpc', '远程程序调用服务'],
	['mod', 'string', '字符串处理函数'],
	['mod', 'sys', '系统消息接口函数'],
	['mod', 'unicode', 'Unicode 字符转换函数库'],
	['fun', 'application', 'get_all_env/0', '获取一个应用程序的所有配置参数'],
	['fun', 'application', 'get_all_env/1', '获取一个应用程序的所有配置参数'],
	['fun', 'application', 'get_all_key/0', '获取一个应用程序的所有应用描述键值'],
	['fun', 'application', 'get_all_key/1', '获取一个应用程序的所有应用描述键值'],
	['fun', 'application', 'get_application/0', '获取一个应用程序的名字'],
	['fun', 'application', 'get_application/1', '获取一个应用程序的名字'],
	['fun', 'application', 'get_env/1', '获取应用程序的配置参数值'],
	['fun', 'application', 'get_env/2', '获取应用程序的配置参数值'],
	['fun', 'application', 'get_key/1', '获取应用程序的描述键值'],
	['fun', 'application', 'get_key/2', '获取应用程序的描述键值'],
	['fun', 'application', 'info/0', '返回当前应用的加载启动信息'],
	['fun', 'application', 'load/1', '加载一个应用程序'],
	['fun', 'application', 'load/2', '加载一个应用程序'],
	['fun', 'application', 'loaded_applications/0', '获取当前已加载过的应用'],
	['fun', 'application', 'permit/2', '更改当前节点上的应用程序的运行权限'],
	['fun', 'application', 'set_env/3', '给应用程序设置一个配置参数'],
	['fun', 'application', 'set_env/4', '给应用程序设置一个配置参数'],
	['fun', 'application', 'start/1', '启动一个应用程序'],
	['fun', 'application', 'start/2', '启动一个应用程序'],
	['fun', 'application', 'start_type/0', '获取当前进程所属应用程序的启动类型'],
	['fun', 'application', 'stop/1', '关停应用程序'],
	['fun', 'application', 'takeover/2', '接管一个分布应用'],
	['fun', 'application', 'unload/1', '卸载应用程序'],
	['fun', 'application', 'unset_env/2', '清除应用程序的配置参数'],
	['fun', 'application', 'unset_env/3', '清除应用程序的配置参数'],
	['fun', 'application', 'which_applications/0', '获取当前正在运行的应用程序信息的列表'],
	['fun', 'application', 'which_applications/1', '获取当前正在运行的应用程序信息的列表'],
	['fun', 'array', 'from_list/1', '把一个列表转为一个可扩展的数组'],
	['fun', 'array', 'from_list/2', '把一个列表转为一个可扩展的数组'],
	['fun', 'array', 'from_orddict/1', '把一个有序列表转为一个可扩展的数组'],
	['fun', 'array', 'from_orddict/2', '把一个有序列表转为一个可扩展的数组'],
	['fun', 'array', 'get/2', '获取数组指定条目的值'],
	['fun', 'array', 'is_array/1', '是否一个数组'],
	['fun', 'array', 'is_fix/1', '判断是否一个固定大小的数组'],
	['fun', 'array', 'new/0', '创建一个初始大小为 0 的新的可扩展的数组'],
	['fun', 'array', 'new/1', '根据给出的选项创建一个新的数组'],
	['fun', 'array', 'new/2', '根据给出的选项创建一个新的数组'],
	['fun', 'array', 'reset/2', '把数组里某个指定项的值重置为默认值'],
	['fun', 'array', 'set/3', '设置数组条目的值'],
	['fun', 'array', 'size/1', '获取数组的条目数量'],
	['fun', 'array', 'sparse_to_list/1', '把数组转为一个列表'],
	['fun', 'array', 'sparse_to_orddict/1', '把数组转为一个有序的列表'],
	['fun', 'array', 'to_list/1', '把数组转为一个列表'],
	['fun', 'array', 'to_orddict/1', '把数组转为一个有序的列表'],
	['fun', 'asn1rt', 'info/1', '返回模块的编译信息'],
	['fun', 'asn1rt', 'load_driver/0', '加载链接驱动'],
	['fun', 'asn1rt', 'unload_driver/0', '卸载链接驱动'],
	['fun', 'asn1rt', 'utf8_binary_to_list/1', '把一个 utf8 编码的二进制数据转为一个 unicode 列表'],
	['fun', 'asn1rt', 'utf8_list_to_binary/1', '把一个 unicode 列表转为一个 utf8 二进制数据'],
	['fun', 'base64', 'decode/1', '把 base64 编码解成字符串数据'],
	['fun', 'base64', 'decode_to_string/1', '把 base64 编码解成字符串数据'],
	['fun', 'base64', 'encode/1', '把数据转成 base64 编码'],
	['fun', 'base64', 'encode_to_string/1', '把数据转成 base64 编码'],
	['fun', 'base64', 'mime_decode/1', '把 base64 编码解成字符串数据'],
	['fun', 'base64', 'mime_decode_to_string/1', '把 base64 编码解成字符串数据'],
	['fun', 'binary', 'at/2', '返回一个二进制数据里指定位置的数据'],
	['fun', 'binary', 'bin_to_list/1', '把一个二进制数据转为一个整数列表'],
	['fun', 'binary', 'bin_to_list/2', '把一个二进制数据转为一个整数列表'],
	['fun', 'binary', 'bin_to_list/3', '把一个二进制数据转为一个整数列表'],
	['fun', 'binary', 'copy/1', '创建一个二进制数据副本'],
	['fun', 'binary', 'first/1', '返回一个二进制的第一个字节'],
	['fun', 'binary', 'last/1', '返回一个二进制的最后一个字节'],
	['fun', 'binary', 'list_to_bin/1', '把一个整数和二进制数据的列表转为一个二进制数据'],
	['fun', 'binary', 'longest_common_suffix/1', '返回在列表二进制数据里最长的公共后缀长度'],
	['fun', 'binary', 'match/2', '在一个二进制数据里查找符合一个模式的第一个匹配'],
	['fun', 'binary', 'referenced_byte_size/1', '检测一个二进制引用的实际二进制数据的大小'],
	['fun', 'binary', 'split/2', '根据一个模式分割二进制数据'],
	['fun', 'binary', 'split/3', '根据一个模式分割二进制数据'],
	['fun', 'calendar', 'date_to_gregorian_days/1', '返回从公元零年到所给出的时间之间的天数'],
	['fun', 'calendar', 'date_to_gregorian_days/3', '返回从公元零年到所给出的时间之间的天数'],
	['fun', 'calendar', 'datetime_to_gregorian_seconds/1', '计算从公历 0 年开始到以给定的日期和时间为结束间的秒数'],
	['fun', 'calendar', 'day_of_the_week/1', '计算某天是星期几'],
	['fun', 'calendar', 'day_of_the_week/3', '计算某年某月某日是星期几'],
	['fun', 'calendar', 'gregorian_days_to_date/1', '把天数转换为日期'],
	['fun', 'calendar', 'gregorian_seconds_to_datetime/1', '从给定的公历秒数里计算出日期和时间'],
	['fun', 'calendar', 'is_leap_year/1', '判断一个年份是否是闰年'],
	['fun', 'calendar', 'iso_week_number/0', '获取当前本地时间日期的周数'],
	['fun', 'calendar', 'iso_week_number/1', '获取当前指定时间日期的周数'],
	['fun', 'calendar', 'last_day_of_the_month/2', '计算在一个月中的天数'],
	['fun', 'calendar', 'local_time/0', '获取现在的当地日期和时间'],
	['fun', 'calendar', 'local_time_to_universal_time/1', '把本地时间转为 UTC 时间'],
	['fun', 'calendar', 'local_time_to_universal_time/2', '把本地时间转为 UTC 时间'],
	['fun', 'calendar', 'local_time_to_universal_time_dst/1', '把本地时间转换为世界标准时'],
	['fun', 'calendar', 'now_to_datetime/1', '把当前世界转为世界通用世界（UTC）'],
	['fun', 'calendar', 'now_to_local_time/1', '把当前时间转换为本地日期时间'],
	['fun', 'calendar', 'now_to_universal_time/1', '把当前世界转为世界通用世界（UTC）'],
	['fun', 'calendar', 'seconds_to_daystime/1', '把秒数转为天数和时间'],
	['fun', 'calendar', 'seconds_to_time/1', '把秒数转为时间'],
	['fun', 'calendar', 'time_difference/2', '比较计算两个时间的差值'],
	['fun', 'calendar', 'time_to_seconds/1', '返回从午夜以来到指定时间之间的秒数'],
	['fun', 'calendar', 'universal_time/0', '获取当前的世界标准时间'],
	['fun', 'calendar', 'universal_time_to_local_time/1', '把世界标准时间（UTC）转为本地时间'],
	['fun', 'calendar', 'valid_date/1', '检测一个日期时间是否有效'],
	['fun', 'calendar', 'valid_date/3', '检测一个日期时间是否有效'],
	['fun', 'code', 'add_path/1', '把目录加载到代码路径的末端'],
	['fun', 'code', 'add_patha/1', '把目录加载到代码路径的开头'],
	['fun', 'code', 'add_paths/1', '把目录加载到代码路径的末端'],
	['fun', 'code', 'add_pathsa/1', '把目录加载到代码路径的开头'],
	['fun', 'code', 'add_pathsz/1', '把目录加载到代码路径的末端'],
	['fun', 'code', 'add_pathz/1', '把目录加载到代码路径的末端'],
	['fun', 'code', 'all_loaded/0', '获取所有已经加载的模块'],
	['fun', 'code', 'clash/0', '查找命名冲突的模块'],
	['fun', 'code', 'compiler_dir/0', '获取编译器的库文件目录'],
	['fun', 'code', 'del_path/1', '从代码路径上删除一个目录'],
	['fun', 'code', 'delete/1', '删除模块的当前代码'],
	['fun', 'code', 'get_object_code/1', '获取模块的目标 BEAM 代码'],
	['fun', 'code', 'get_path/0', '获取代码服务器当前搜索加载代码的路径'],
	['fun', 'code', 'is_loaded/1', '检测模块是否已经加载'],
	['fun', 'code', 'is_module_native/1', '检测模块是有有原生代码'],
	['fun', 'code', 'is_sticky/1', '检测模块是否是一个黏附（sticky）模块'],
	['fun', 'code', 'lib_dir/0', '获取 Erlang/OTP 的库文件目录'],
	['fun', 'code', 'lib_dir/1', '一个应用的库目录'],
	['fun', 'code', 'lib_dir/2', '返回一个应用的子目录'],
	['fun', 'code', 'load_binary/3', '加载一个模块的目标代码'],
	['fun', 'code', 'load_file/1', '加载一个模块'],
	['fun', 'code', 'priv_dir/1', '返回一个应用 priv 目录路径'],
	['fun', 'code', 'purge/1', '清除一个模块的旧代码'],
	['fun', 'code', 'rehash/0', '创建或重新刷新代码路径缓存'],
	['fun', 'code', 'replace_path/2', '替换代码路径里的某一个目录'],
	['fun', 'code', 'root_dir/0', '返回 Erlang/OTP 安装的根目录'],
	['fun', 'code', 'set_path/1', '设置代码服务的搜索路径'],
	['fun', 'code', 'soft_purge/1', '移除一个模块的旧代码'],
	['fun', 'code', 'where_is_file/1', '返回在代码目录上一个文件的完整路径名'],
	['fun', 'code', 'which/1', '获取一个模块的目标代码的文件位置'],
	['fun', 'dbg', 'p/2', '根据标志来监控项目'],
	['fun', 'dbg', 'tracer/0', '启动一个处理监控消息的监控服务'],
	['fun', 'dict', 'append/3', '在字典里给一个键附加上一个值'],
	['fun', 'dict', 'append_list/3', '在字典里给一个键附加上一个列表值'],
	['fun', 'dict', 'erase/2', '从字典里删除一个键'],
	['fun', 'dict', 'fetch/2', '在字典里查找值'],
	['fun', 'dict', 'fetch_keys/1', '获取字典里所有键'],
	['fun', 'dict', 'filter/2', '筛选断言为真的元素'],
	['fun', 'dict', 'find/2', '在字典里查找值'],
	['fun', 'dict', 'fold/3', '调用函数对字典里的键值进行递归遍历操作'],
	['fun', 'dict', 'from_list/1', '把一个 Key-Value 形式的列表转换为一个字典'],
	['fun', 'dict', 'is_empty/1', '判断字典是否为空'],
	['fun', 'dict', 'is_key/2', '判断键是否在字典里'],
	['fun', 'dict', 'map/2', '对字典里的每一对键值遍历调用函数'],
	['fun', 'dict', 'merge/3', '合并 2 个字典'],
	['fun', 'dict', 'new/0', '初始构造一个新的字典'],
	['fun', 'dict', 'size/1', '返回字典里键值对的个数'],
	['fun', 'dict', 'store/3', '在字典里存储一个值'],
	['fun', 'dict', 'to_list/1', '把字典转换成一个列表形式'],
	['fun', 'dict', 'update/3', '更新字典里的一个值'],
	['fun', 'dict', 'update/4', '更新字典里的一个值'],
	['fun', 'dict', 'update_counter/3', '对字典里指定键的值进行相加操作'],
	['fun', 'erlang', 'abs/1', '返回一个数字的绝对值'],
	['fun', 'erlang', 'adler32/1', '计算并返回一个数据的 Adler-32 校验值'],
	['fun', 'erlang', 'adler32/2', '计算并返回一个数据的 Adler-32 校验值'],
	['fun', 'erlang', 'adler32_combine/3', '组合两个 Adler-32 效验值'],
	['fun', 'erlang', 'append_element/2', '向元组添加一个额外的元素'],
	['fun', 'erlang', 'apply/2', '用参数调用函数'],
	['fun', 'erlang', 'apply/3', '用参数调用模块的函数'],
	['fun', 'erlang', 'atom_to_binary/2', '返回一个原子的二进制表示形式'],
	['fun', 'erlang', 'atom_to_list/1', '返回原子的文本表示形式'],
	['fun', 'erlang', 'binary_part/2', '提取一个二进制数据的一部分'],
	['fun', 'erlang', 'binary_part/3', '提取一个二进制数据的一部分'],
	['fun', 'erlang', 'binary_to_atom/2', '把二进制数据转为一个原子'],
	['fun', 'erlang', 'binary_to_existing_atom/2', '把二进制数据转为一个现有已存在的原子'],
	['fun', 'erlang', 'binary_to_list/1', '把一个二进制转为一个列表'],
	['fun', 'erlang', 'binary_to_list/3', '把一个二进制数据的一部分转为一个列表'],
	['fun', 'erlang', 'binary_to_term/1', '把二进制数据转为一个原始 erlang 数据'],
	['fun', 'erlang', 'binary_to_term/2', '把二进制数据转为一个原始 erlang 数据'],
	['fun', 'erlang', 'bit_size/1', '返回一个位串的长度大小'],
	['fun', 'erlang', 'bitstring_to_list/1', '把一个位串转为一个列表'],
	['fun', 'erlang', 'bump_reductions/1', '增加缩减计数器数'],
	['fun', 'erlang', 'byte_size/1', '获取一个字节串（二进制）数据的字节长度'],
	['fun', 'erlang', 'cancel_timer/1', '取消一个定时器'],
	['fun', 'erlang', 'check_old_code/1', '检测模块是否含有旧代码'],
	['fun', 'erlang', 'check_process_code/2', '检测进程的运行代码是否为旧版本'],
	['fun', 'erlang', 'crc32/1', '计算并返回一个数据的 CRC 校验值'],
	['fun', 'erlang', 'crc32/2', '计算并返回一个数据的 CRC 校验值'],
	['fun', 'erlang', 'crc32_combine/3', '组合两个 CRC 效验值'],
	['fun', 'erlang', 'date/0', '返回当前日期'],
	['fun', 'erlang', 'decode_packet/3', '从一个二进制数据里解码一个协议包'],
	['fun', 'erlang', 'delete_element/2', '删除元组里的值'],
	['fun', 'erlang', 'delete_module/1', '将模块的当前代码标记为旧版'],
	['fun', 'erlang', 'demonitor/1', '取消一个监控过程'],
	['fun', 'erlang', 'demonitor/2', '取消一个监控过程'],
	['fun', 'erlang', 'disconnect_node/1', '强制断开一个节点连接'],
	['fun', 'erlang', 'display/1', '在标准输出端上输出一个数据项'],
	['fun', 'erlang', 'element/2', '获取元组里的元素'],
	['fun', 'erlang', 'erase/0', '返回所有进程字典数据并删除之'],
	['fun', 'erlang', 'erase/1', '获取并清除进程字典里跟键所对应的值'],
	['fun', 'erlang', 'error/1', '以一个给定的原因停止执行当前进程'],
	['fun', 'erlang', 'error/2', '以一个给定的原因和参数停止执行当前进程'],
	['fun', 'erlang', 'exit/1', '以一个给定的原因停止执行当前进程'],
	['fun', 'erlang', 'exit/2', '对一个进程发出一条退出消息'],
	['fun', 'erlang', 'float/1', '把一个数字转为浮点数'],
	['fun', 'erlang', 'float_to_binary/1', '把一个浮点数转为二进制数据'],
	['fun', 'erlang', 'float_to_binary/2', '把一个浮点数转为二进制数据'],
	['fun', 'erlang', 'float_to_list/1', '返回一个浮点数的文本形式'],
	['fun', 'erlang', 'float_to_list/2', '返回一个浮点数的文本形式'],
	['fun', 'erlang', 'fun_to_list/1', '返回一个函数的文本形式'],
	['fun', 'erlang', 'function_exported/3', '检测一个函数是否输出并被加载'],
	['fun', 'erlang', 'garbage_collect/0', '对当前进程进行垃圾回收操作'],
	['fun', 'erlang', 'garbage_collect/1', '对指定进程进行垃圾回收操作'],
	['fun', 'erlang', 'get/0', '返回进程里的所有字典值'],
	['fun', 'erlang', 'get/1', '从进程字典里获取一个值'],
	['fun', 'erlang', 'get_cookie/0', '获取本地节点的魔饼值（magic cookie）'],
	['fun', 'erlang', 'get_keys/1', '从进程字典里返回一个键列表'],
	['fun', 'erlang', 'get_module_info/2', '获取模块的指定信息'],
	['fun', 'erlang', 'get_stacktrace/0', '获取最近出现异常的堆栈跟踪信息'],
	['fun', 'erlang', 'group_leader/0', '获取被调用进程的组长进程ID'],
	['fun', 'erlang', 'group_leader/2', '设置一个进程为组长'],
	['fun', 'erlang', 'hd/1', '返回一个列表的第一个元素'],
	['fun', 'erlang', 'insert_element/3', '向元组插入一个元素'],
	['fun', 'erlang', 'integer_to_binary/1', '把一个整数转换二进制数据'],
	['fun', 'erlang', 'integer_to_binary/2', '把一个整数转换二进制数据'],
	['fun', 'erlang', 'integer_to_list/1', '返回一个整数的文本形式'],
	['fun', 'erlang', 'integer_to_list/2', '返回一个整数的文本形式'],
	['fun', 'erlang', 'iolist_size/1', '返回一个 iolist 的长度'],
	['fun', 'erlang', 'iolist_to_binary/1', '把一个 iolist 转为一个二进制数据'],
	['fun', 'erlang', 'is_alive/0', '检测本地节点是否还存活'],
	['fun', 'erlang', 'is_atom/1', '判断是否是一个原子类型'],
	['fun', 'erlang', 'is_binary/1', '判断是否一个二进制类型'],
	['fun', 'erlang', 'is_bitstring/1', '是否是一个位串类型'],
	['fun', 'erlang', 'is_boolean/1', '判断是否一个布尔类型'],
	['fun', 'erlang', 'is_builtin/3', '判断一个是否是由 C 实现的内置函数（BIF）'],
	['fun', 'erlang', 'is_float/1', '判断是否是一个浮点数类型'],
	['fun', 'erlang', 'is_function/1', '判断是否是一个函数类型'],
	['fun', 'erlang', 'is_function/2', '判断是否是一个函数类型'],
	['fun', 'erlang', 'is_integer/1', '判断是否是一个整数'],
	['fun', 'erlang', 'is_list/1', '判断是否是一个列表类型'],
	['fun', 'erlang', 'is_number/1', '判断是否是一个数字'],
	['fun', 'erlang', 'is_pid/1', '判断是否是一个进程'],
	['fun', 'erlang', 'is_port/1', '判断是否是一个端口（port）类型'],
	['fun', 'erlang', 'is_process_alive/1', '检测进程是否存活'],
	['fun', 'erlang', 'is_record/2', '判断变量是否是一个记录'],
	['fun', 'erlang', 'is_record/3', '判断变量是否是一个记录'],
	['fun', 'erlang', 'is_reference/1', '判断是否是一个引用类型'],
	['fun', 'erlang', 'is_tuple/1', '判断是否是一个元组类型'],
	['fun', 'erlang', 'length/1', '获取列表的长度'],
	['fun', 'erlang', 'list_to_atom/1', '把一个文本形式的字符列表转为原子'],
	['fun', 'erlang', 'list_to_binary/1', '把一个列表转为一个二进制数据'],
	['fun', 'erlang', 'list_to_bitstring/1', '把一个列表转为一个字节串'],
	['fun', 'erlang', 'list_to_existing_atom/1', '把一个文本形式的字符列表转为原子'],
	['fun', 'erlang', 'list_to_float/1', '把一个字符串转为一个浮点数'],
	['fun', 'erlang', 'list_to_integer/1', '把一个字符串转为一个整数'],
	['fun', 'erlang', 'list_to_integer/2', '把字符串转为一个整数'],
	['fun', 'erlang', 'list_to_pid/1', '将一个字符串转为一个 pid'],
	['fun', 'erlang', 'list_to_tuple/1', '把一个列表转换为一个元组'],
	['fun', 'erlang', 'load_module/2', '加载一个模块的目标 BEAM 代码'],
	['fun', 'erlang', 'load_nif/2', '加载原生实现函数'],
	['fun', 'erlang', 'loaded/0', '返回一个所有已经加载模块的列表'],
	['fun', 'erlang', 'localtime/0', '获取现在的当地日期和时间'],
	['fun', 'erlang', 'localtime_to_universaltime/1', '把当地时间转为国际标准时间（UTC）'],
	['fun', 'erlang', 'localtime_to_universaltime/2', '把当地时间转为国际标准时间（UTC）'],
	['fun', 'erlang', 'make_ref/0', '返回一个几乎唯一的引用值'],
	['fun', 'erlang', 'max/2', '返回两个项值里最大的一个'],
	['fun', 'erlang', 'md5/1', '把一个数据加密为一个 MD5 值'],
	['fun', 'erlang', 'md5_final/1', '完成一个 MD5 上下文的计算并返回计算后的 MD5 值'],
	['fun', 'erlang', 'md5_init/0', '创建一个 MD5 上下文'],
	['fun', 'erlang', 'md5_update/2', '用一个数据来更新一个 MD5 值'],
	['fun', 'erlang', 'memory/0', '获取内存的动态分配信息'],
	['fun', 'erlang', 'memory/1', '获取指定内存类型的动态分配信息'],
	['fun', 'erlang', 'min/2', '返回两个项值里最小的那个'],
	['fun', 'erlang', 'module_loaded/1', '检测一个模块是否已经加载'],
	['fun', 'erlang', 'monitor/2', '开启一个监控过程'],
	['fun', 'erlang', 'nif_error/1', '以一个给定的原因停止执行当前进程'],
	['fun', 'erlang', 'nif_error/2', '以一个给定的原因和参数停止执行当前进程'],
	['fun', 'erlang', 'node/0', '返回本地节点的名字'],
	['fun', 'erlang', 'node/1', '返回一个进程、端口或映射所在的节点'],
	['fun', 'erlang', 'nodes/0', '返回系统里所有可访问的节点'],
	['fun', 'erlang', 'nodes/1', '返回系统里某一个类型的所有节点'],
	['fun', 'erlang', 'now/0', '获取从 GMT 零点开始到当前的时间'],
	['fun', 'erlang', 'phash/2', '小型便携的 hash 函数'],
	['fun', 'erlang', 'phash2/2', '小型便携的 hash 函数'],
	['fun', 'erlang', 'pid_to_list/1', '返回一个进程 Pid 的文本表示形式的字符串'],
	['fun', 'erlang', 'port_info/1', '获取一个端口的信息'],
	['fun', 'erlang', 'port_info/2', '获取端口的指定信息'],
	['fun', 'erlang', 'port_to_list/1', '返回一个端口标识的文本表示形式的字符串'],
	['fun', 'erlang', 'ports/0', '返回一个本地节点的所有端口的列表'],
	['fun', 'erlang', 'pre_loaded/0', '列出所有预加载的模块'],
	['fun', 'erlang', 'process_display/2', '获取进程的一些标准信息'],
	['fun', 'erlang', 'process_info/1', '返回一个进程的信息'],
	['fun', 'erlang', 'process_info/2', '获取进程的相关信息'],
	['fun', 'erlang', 'processes/0', '获取本地节点上所有进程'],
	['fun', 'erlang', 'purge_module/1', '移除模块的旧代码'],
	['fun', 'erlang', 'put/2', '在进程字典里添加一个新键'],
	['fun', 'erlang', 'read_timer/1', '获取一个定时器的剩余毫秒数'],
	['fun', 'erlang', 'record_info/2', '获取记录信息'],
	['fun', 'erlang', 'register/2', '给一个进程或端口注册一个名字'],
	['fun', 'erlang', 'registered/0', '获取所有注册名'],
	['fun', 'erlang', 'round/1', '返回一个数四舍五入后的整数值'],
	['fun', 'erlang', 'self/0', '返回当前调用进程的 pid'],
	['fun', 'erlang', 'send/2', '发送一个信息'],
	['fun', 'erlang', 'send/3', '发送一个条件信息'],
	['fun', 'erlang', 'send_after/3', '开启一个定时器'],
	['fun', 'erlang', 'set_cookie/2', '给一个节点设置 cookie'],
	['fun', 'erlang', 'setelement/3', '设置一个元组的值'],
	['fun', 'erlang', 'size/1', '获取一个元组或二进制数据的大小'],
	['fun', 'erlang', 'start_timer/3', '开启一个定时器'],
	['fun', 'erlang', 'statistics/1', '返回系统信息'],
	['fun', 'erlang', 'system_info/1', '返回系统的相关信息'],
	['fun', 'erlang', 'system_profile/0', '获取当前系统的属性信息'],
	['fun', 'erlang', 'term_to_binary/1', '把一个 Erlang 转为一个二进制数据'],
	['fun', 'erlang', 'throw/1', '抛出一个异常错误'],
	['fun', 'erlang', 'time/0', '获取当前时间'],
	['fun', 'erlang', 'tl/1', '获取一个列表的尾列表'],
	['fun', 'erlang', 'trunc/1', '截断一个数的小数部位'],
	['fun', 'erlang', 'tuple_size/1', '返回一个元组的大小'],
	['fun', 'erlang', 'tuple_to_list/1', '把一个元组转为一个列表'],
	['fun', 'erlang', 'universaltime', '获取当前的世界标准时间（UTC）'],
	['fun', 'erlang', 'universaltime_to_localtime/1', '把世界标准时间转为本地日期时间'],
	['fun', 'erlang', 'unregister/1', '去除一个进程或端口的注册名'],
	['fun', 'erlang', 'whereis/1', '通过给出的注册码获取一个进程或端口'],
	['fun', 'ets', 'all/0', '获取所有的 ets 表'],
	['fun', 'ets', 'delete/1', '删除整张表'],
	['fun', 'ets', 'delete/2', '删除表里指定键的所有数据'],
	['fun', 'ets', 'delete_all_objects/1', '删除表里的所有数据'],
	['fun', 'ets', 'delete_object/2', '删除表里的指定数据'],
	['fun', 'ets', 'file2tab/1', '从一个文件读取一个 ETS 表'],
	['fun', 'ets', 'first/1', '获取 ETS 表里的第一个对象数据的键'],
	['fun', 'ets', 'foldl/3', '对 ETS 数据遍历循环操作'],
	['fun', 'ets', 'fun2ms/1', '把语法函数转为匹配规范的伪函数'],
	['fun', 'ets', 'give_away/3', '改变一个表的拥有者'],
	['fun', 'ets', 'i/0', '在输出端上打印显示所有 ETS 表的信息'],
	['fun', 'ets', 'i/1', '在输出端上打印显示指定 ETS 表 Tab 的信息'],
	['fun', 'ets', 'info/1', '返回一个 ETS 表的信息'],
	['fun', 'ets', 'info/2', '返回给出的跟表相关的项的信息'],
	['fun', 'ets', 'insert/2', '向 ETS 表插入数据'],
	['fun', 'ets', 'insert_new/2', '向 ETS 表插入新数据'],
	['fun', 'ets', 'is_compiled_ms/1', '检测一个 Erlang 数据是否是一个有效已编译的匹配规范'],
	['fun', 'ets', 'last/1', '返回表里的最后一个键'],
	['fun', 'ets', 'lookup/2', '在 ETS 表里查出相应键的值'],
	['fun', 'ets', 'lookup_element/3', '返回 ETS 表里指定键的对象数据的第几个元素数据'],
	['fun', 'ets', 'match/1', '根据匹配模式匹配表里的对象数据'],
	['fun', 'ets', 'match/2', '根据匹配模式匹配表里的对象数据'],
	['fun', 'ets', 'match/3', '根据匹配模式匹配表里的对象数据'],
	['fun', 'ets', 'match_delete/2', '根据匹配模式删除表里的对象数据'],
	['fun', 'ets', 'match_object/1', '根据匹配模式匹配表里的对象数据'],
	['fun', 'ets', 'match_object/2', '根据匹配模式匹配表里的对象数据'],
	['fun', 'ets', 'match_object/3', '根据匹配模式匹配表里的对象数据'],
	['fun', 'ets', 'match_spec_compile/1', '把一个匹配规范编译为它的内部表示形式'],
	['fun', 'ets', 'match_spec_run/2', '使用一个匹配规范来执行匹配操作'],
	['fun', 'ets', 'member/2', '判断表里面是否存在指定键的数据'],
	['fun', 'ets', 'new/2', '创建一个 ets 表'],
	['fun', 'ets', 'next/2', '返回表的下一个键'],
	['fun', 'ets', 'prev/2', '返回表的上一个键'],
	['fun', 'ets', 'rename/2', '重新给 ETS 表命名一个名字'],
	['fun', 'ets', 'safe_fixtable/2', '锁定一定 ETS 表使其可以安全遍历'],
	['fun', 'ets', 'select/1', '对 ETS 表里的数据进行匹配比对'],
	['fun', 'ets', 'select/2', '对 ETS 表里的数据进行匹配比对'],
	['fun', 'ets', 'select/3', '对 ETS 表里的数据进行匹配比对'],
	['fun', 'ets', 'select_delete/2', '根据匹配模式删除表里的对象数据'],
	['fun', 'ets', 'select_reverse/1', '根据匹配规范匹配表里的对象数据'],
	['fun', 'ets', 'select_reverse/2', '根据匹配规范匹配表里的对象数据'],
	['fun', 'ets', 'select_reverse/3', '根据匹配规范匹配表里的对象数据'],
	['fun', 'ets', 'tab2file/2', '把一个 ETS 表转储到一个文件里'],
	['fun', 'ets', 'tab2file/3', '把一个 ETS 表转储到一个文件里'],
	['fun', 'ets', 'tab2list/1', '返回一个 ETS 表的所有对象数据的列表'],
	['fun', 'ets', 'to_dets/2', '把内存里的 ETS 数据插入到磁盘上保存'],
	['fun', 'ets', 'update_element/3', '更新 ETS 表里指定键的对象数据的第几个元素数据'],
	['fun', 'file', 'advise/4', '对文件数据预声明一个访问模式'],
	['fun', 'file', 'change_group/2', '更改文件所属的用户组'],
	['fun', 'file', 'change_mode/2', '更改一个文件的权限'],
	['fun', 'file', 'change_owner/2', '更改文件所属的用户'],
	['fun', 'file', 'change_owner/3', '更改文件所属的用户和用户组'],
	['fun', 'file', 'change_time/2', '更改一个文件的最后修改时间'],
	['fun', 'file', 'change_time/3', '更改一个文件的最后访问和修改时间'],
	['fun', 'file', 'close/1', '关闭一个打开的文件引用'],
	['fun', 'file', 'consult/1', '把文件里的 Erlang 项值读出来'],
	['fun', 'file', 'copy/2', '复制文件内容'],
	['fun', 'file', 'copy/3', '复制文件内容'],
	['fun', 'file', 'datasync/1', '同步数据到磁盘'],
	['fun', 'file', 'delete/1', '删除一个文件'],
	['fun', 'file', 'eval/1', '对文件里的 Erlang 表达式进行求值解析'],
	['fun', 'file', 'eval/2', '对文件里的 Erlang 表达式进行求值解析'],
	['fun', 'file', 'format_error/1', '返回一个错误标示的直观错误描述'],
	['fun', 'file', 'get_cwd/0', '获取当前工作目录'],
	['fun', 'file', 'list_dir/1', '列出目录下的所有文件或文件夹'],
	['fun', 'file', 'list_dir_all/1', '列出一个目录下的所有文件'],
	['fun', 'file', 'make_dir/0', '创建一个目录'],
	['fun', 'file', 'native_name_encoding/0', '返回虚拟机 VM 配置文件编码'],
	['fun', 'file', 'open/2', '打开一个文件'],
	['fun', 'file', 'path_eval/2', '对在一个文件里的 Erlang 表达式进行解析'],
	['fun', 'file', 'position/2', '设置 IoDevice 文件中的指针位置'],
	['fun', 'file', 'pwrite/3', '在文件的一个指定位置写入数据'],
	['fun', 'file', 'read/2', '从一个文件读取数据'],
	['fun', 'file', 'read_file/1', '读取文件内容数据'],
	['fun', 'file', 'read_file_info/1', '获取一个文件信息'],
	['fun', 'file', 'read_file_info/2', '获取一个文件信息'],
	['fun', 'file', 'rename/2', '更改文件名字'],
	['fun', 'file', 'sendfile/2', '通过套接字端口 Socket 发送文件数据'],
	['fun', 'file', 'sendfile/5', '通过套接字端口 Socket 发送文件数据'],
	['fun', 'file', 'set_cwd/1', '设置当前工作目录'],
	['fun', 'file', 'sync/1', '同步数据到磁盘'],
	['fun', 'file', 'write/2', '向一个文件引用写入数据'],
	['fun', 'file', 'write_file/2', '向文件写入数据'],
	['fun', 'file', 'write_file/3', '向文件写入数据'],
	['fun', 'file', 'write_file_info/2', '修改一个文件的信息'],
	['fun', 'filelib', 'ensure_dir/1', '确定文件或目录的所有父目录都已经存在'],
	['fun', 'filelib', 'file_size/1', '获取文件的大小'],
	['fun', 'filelib', 'fold_files/5', '对目录下的文件按正则表达式进行匹配'],
	['fun', 'filelib', 'is_dir/1', '判断是否是目录'],
	['fun', 'filelib', 'is_file/1', '判断是否是一个文件或目录'],
	['fun', 'filelib', 'is_regular/1', '判断是否是一个标准文件'],
	['fun', 'filelib', 'last_modified/1', '获取文件最后修改的时间'],
	['fun', 'filelib', 'wildcard/1', '使用 Unix 风格的通配符匹配文件'],
	['fun', 'filelib', 'wildcard/2', '在指定目录 Cwd 下使用 Unix 风格的通配符匹配文件'],
	['fun', 'filename', 'dirname/1', '返回一个路径名里的目录部分'],
	['fun', 'filename', 'join/1', '通过目录分隔符把一个路径名列表连接起来'],
	['fun', 'filename', 'join/2', '把 2 个目录路径名用目录分隔符连接起来'],
	['fun', 'gb_trees', 'balance/1', '对树进行平衡操作'],
	['fun', 'gb_trees', 'delete/2', '从树里删除一个节点'],
	['fun', 'gb_trees', 'delete_any/2', '从树里删除一个节点'],
	['fun', 'gb_trees', 'empty/0', '获取一个新的空树'],
	['fun', 'gb_trees', 'enter/3', '向树里插入（或更新）一个跟键相关的值'],
	['fun', 'gb_trees', 'from_orddict/1', '把一个有序字典列表转为一个树'],
	['fun', 'gb_trees', 'get/2', '在树里查找一个键（如果存在的话）'],
	['fun', 'gb_trees', 'insert/3', '向树里插入一个新的键和值'],
	['fun', 'gb_trees', 'is_defined/2', '检测键是否在树里存在'],
	['fun', 'gb_trees', 'is_empty/1', '判断是否一个空树'],
	['fun', 'gb_trees', 'iterator/1', '返回一个树的迭代器'],
	['fun', 'gb_trees', 'keys/1', '返回一个包含树里所有键的有序列表'],
	['fun', 'gb_trees', 'largest/1', '返回最大的键和值'],
	['fun', 'gb_trees', 'lookup/2', '在树里查找一个值'],
	['fun', 'gb_trees', 'map/2', '树里的每一个键值对都调用执行一次函数'],
	['fun', 'gb_trees', 'next/1', '使用迭代器获取树的下一个节点'],
	['fun', 'gb_trees', 'size/1', '返回树的节点数量'],
	['fun', 'gb_trees', 'smallest/1', '返回最小的键和值'],
	['fun', 'gb_trees', 'take_largest/1', '从树里提取最大的元素'],
	['fun', 'gb_trees', 'take_smallest/1', '从树里提取最小的元素'],
	['fun', 'gb_trees', 'to_list/1', '把一个树转为一个列表'],
	['fun', 'gb_trees', 'update/3', '更新树里键的值'],
	['fun', 'gb_trees', 'values/1', '返回一个包含树里所有值的有序列表'],
	['fun', 'gen_tcp', 'accept/1', '接受一个发送到监听套接字 ListenSocket 上的连接请求'],
	['fun', 'gen_tcp', 'accept/2', '接受一个发送到监听套接字 ListenSocket 上的连接请求'],
	['fun', 'gen_tcp', 'close/1', '关闭一个 TCP 套接字'],
	['fun', 'gen_tcp', 'connect/3', '连接一个 TCP 端口'],
	['fun', 'gen_tcp', 'connect/4', '连接一个 TCP 端口'],
	['fun', 'gen_tcp', 'controlling_process/2', '改变一个套接字的控制进程'],
	['fun', 'gen_tcp', 'listen/2', '开启一个监听某个端口的套接字'],
	['fun', 'gen_tcp', 'recv/2', '从一个被动模式的套接字接受一个数据包'],
	['fun', 'gen_tcp', 'recv/3', '从一个被动模式的套接字接受一个数据包'],
	['fun', 'gen_tcp', 'send/2', '在一个套接字 Socket 发送一个数据包'],
	['fun', 'gen_tcp', 'shutdown/2', '半关闭一个套接字'],
	['fun', 'inet', 'peername/1', '返回另一端连接的地址和端口'],
	['fun', 'inet', 'port/1', '返回一个套接字的本地端口号'],
	['fun', 'io', 'columns/0', '返回默认输出端的列数'],
	['fun', 'io', 'columns/1', '返回指定输出端的列数'],
	['fun', 'io', 'format/1', '按照指定的格式把数据写入到输出端上'],
	['fun', 'io', 'format/2', '按照指定的格式把数据写入到输出端上'],
	['fun', 'io', 'format/3', '按照指定的格式把数据写入到输出端上'],
	['fun', 'io', 'fread/2', '读入一个格式化的数据'],
	['fun', 'io', 'fread/3', '读入一个格式化的数据'],
	['fun', 'io', 'fwrite/1', '按照指定的格式把数据写入到输出端上'],
	['fun', 'io', 'fwrite/2', '按照指定的格式把数据写入到输出端上'],
	['fun', 'io', 'fwrite/3', '按照指定的格式把数据写入到输出端上'],
	['fun', 'io', 'get_chars/2', '读取默认输出端里输入的前 N 个字符'],
	['fun', 'io', 'get_chars/3', '读取指定输出端里的输入前 N 个字符'],
	['fun', 'io', 'get_line/1', '读取 当前默认输入端的一行数据'],
	['fun', 'io', 'get_line/2', '读取指定输入端的一行数据'],
	['fun', 'io', 'getopts/0', '获取当前默认输出端的配置选项'],
	['fun', 'io', 'getopts/1', '获取指定输出端的配置选项'],
	['fun', 'io', 'nl/0', '向默认输出端写入一个换行符'],
	['fun', 'io', 'nl/1', '向指定输出端写入一个换行符'],
	['fun', 'io', 'parse_erl_exprs/1', '读取并解析 Erlang 表达式'],
	['fun', 'io', 'parse_erl_exprs/2', '读取并解析 Erlang 表达式'],
	['fun', 'io', 'parse_erl_exprs/3', '读取并解析 Erlang 表达式'],
	['fun', 'io', 'parse_erl_form/1', '读取并解析 Erlang 表达式'],
	['fun', 'io', 'parse_erl_form/2', '读取并解析 Erlang 表达式'],
	['fun', 'io', 'parse_erl_form/3', '读取并解析 Erlang 表达式'],
	['fun', 'io', 'put_chars/1', '向默认输出端写入字符数据'],
	['fun', 'io', 'put_chars/2', '向指定输出端写入字符数据'],
	['fun', 'io', 'read/1', '读入一个 Erlang 项元'],
	['fun', 'io', 'read/2', '读入一个 Erlang 项元'],
	['fun', 'io', 'read/3', '读入一个 Erlang 项元'],
	['fun', 'io', 'rows/0', '返回默认输出端的行数'],
	['fun', 'io', 'rows/1', '返回指定输出端的行数'],
	['fun', 'io', 'scan_erl_exprs/1', '读取并转换为 Erlang 表达式'],
	['fun', 'io', 'scan_erl_exprs/2', '读取并转换为 Erlang 表达式'],
	['fun', 'io', 'scan_erl_exprs/3', '读取并转换为 Erlang 表达式'],
	['fun', 'io', 'scan_erl_form/1', '读取并转换为 Erlang 表达式'],
	['fun', 'io', 'scan_erl_form/2', '读取并转换为 Erlang 表达式'],
	['fun', 'io', 'scan_erl_form/3', '读取并转换为 Erlang 表达式'],
	['fun', 'io', 'setopts/1', '设置当前默认输出端的配置选项'],
	['fun', 'io', 'setopts/2', '设置指定输出端的配置选项'],
	['fun', 'io', 'write/1', '打印输出一个 Erlang 项元'],
	['fun', 'io', 'write/2', '打印输出一个 Erlang 项元'],
	['fun', 'lists', 'all/2', '如果列表里的所有元素都满足条件则返回 true'],
	['fun', 'lists', 'any/2', '如果列表里的某一个元素满足条件则返回 true'],
	['fun', 'lists', 'append/1', '附加连接列表集里的每一个子列表'],
	['fun', 'lists', 'append/2', '合并 2 个列表'],
	['fun', 'lists', 'concat/1', '合并为一个文本形式的列表'],
	['fun', 'lists', 'delete/2', '从列表里面删除一个元素'],
	['fun', 'lists', 'droplast/1', '删除列表中的最后一个元素'],
	['fun', 'lists', 'dropwhile/2', '当断言为真则从列表里丢弃该元素'],
	['fun', 'lists', 'duplicate/2', '返回一个由 N  个元素副本组成的列表'],
	['fun', 'lists', 'filter/2', '选择符合满足断言条件的元素'],
	['fun', 'lists', 'filtermap/2', '过滤并映射操作符合函数条件的元素'],
	['fun', 'lists', 'flatlength/1', '获取一个多层嵌套列表的长度'],
	['fun', 'lists', 'flatmap/2', '对映射 map 调用返回的列表进行附加 append 操作'],
	['fun', 'lists', 'flatten/1', '扁平化一个多层嵌套列表'],
	['fun', 'lists', 'flatten/2', '扁平化一个多层嵌套列表'],
	['fun', 'lists', 'foldl/3', '列表里的元素递归调用函数'],
	['fun', 'lists', 'foldr/3', '列表里的元素递归调用函数'],
	['fun', 'lists', 'foreach/2', '列表里的每一个元素被函数调用'],
	['fun', 'lists', 'keydelete/3', '从元组列表里删除一个元素'],
	['fun', 'lists', 'keyfind/3', '在一个元组列表里查找一个元素'],
	['fun', 'lists', 'keymap/3', '元组列表里元组的值被函数调用'],
	['fun', 'lists', 'keymember/3', '判断是否是元组列表里的成员'],
	['fun', 'lists', 'keymerge/3', '合并两个元组列表并排序'],
	['fun', 'lists', 'keyreplace/4', '替换元组列表里的值'],
	['fun', 'lists', 'keysearch/3', '在一个元组列表里查找一个元素'],
	['fun', 'lists', 'keysort/3', '对元组列表进行排序'],
	['fun', 'lists', 'keystore/4', '在元组列表里存储一个值'],
	['fun', 'lists', 'keytake/3', '从元组列表里提取一个元素'],
	['fun', 'lists', 'last/1', '返回列表里最后一个元素'],
	['fun', 'lists', 'map/2', '列表里的每一个元素被函数调用'],
	['fun', 'lists', 'mapfoldl/3', '列表里的每一个元素被函数调用'],
	['fun', 'lists', 'mapfoldr/3', '列表里的每一个元素被函数调用'],
	['fun', 'lists', 'max/1', '返回列表里的最大值'],
	['fun', 'lists', 'member/2', '判断元素是否是列表里的成员'],
	['fun', 'lists', 'merge/1', '合并列表'],
	['fun', 'lists', 'merge/2', '将 2 个列表合并为一个列表'],
	['fun', 'lists', 'merge/3', '根据排列函数来合并 2 个列表'],
	['fun', 'lists', 'merge3/3', '将 3 个列表合并为一个列表'],
	['fun', 'lists', 'min/1', '获取列表里的最少值'],
	['fun', 'lists', 'nth/2', '获取列表里的第 N 个元素'],
	['fun', 'lists', 'nthtail/2', '获取列表里的第 N 个元素后的元素'],
	['fun', 'lists', 'partition/2', '根据断言划分列表'],
	['fun', 'lists', 'prefix/2', '判断列表前缀'],
	['fun', 'lists', 'reverse/1', '反转一个列表'],
	['fun', 'lists', 'reverse/2', '反转一个列表并加上一个列表'],
	['fun', 'lists', 'seq/2', '生成一个序列正数列表'],
	['fun', 'lists', 'seq/3', '生成一个序列正数列表'],
	['fun', 'lists', 'sort/1', '排序一个列表'],
	['fun', 'lists', 'sort/2', '排序一个列表'],
	['fun', 'lists', 'split/2', '把一个列表分成两个列表'],
	['fun', 'lists', 'splitwith/2', '基于一个断言把一个列表分成两个列表'],
	['fun', 'lists', 'sublist/2', '截取一定长度的列表'],
	['fun', 'lists', 'sublist/3', '截取一定长度的列表'],
	['fun', 'lists', 'subtract/2', '删除一个列表在另一列表里出现的部分'],
	['fun', 'lists', 'suffix/2', '判断列表后缀'],
	['fun', 'lists', 'sum/1', '计算列表里每个元素的总和'],
	['fun', 'lists', 'takewhile/2', '基于一个断言提取一个列表'],
	['fun', 'lists', 'ukeymerge/3', '根据元组键值合并 2 个元组列表并删除重复的值'],
	['fun', 'lists', 'ukeysort/2', '排序一个元组列表并删除重复的值'],
	['fun', 'lists', 'umerge/1', '合并列表里的子列表并删除重复的值'],
	['fun', 'lists', 'umerge/2', '合并两个列表并删除重复的值'],
	['fun', 'lists', 'umerge/3', '根据排序函数合并两个列表并删除重复的值'],
	['fun', 'lists', 'umerge3/3', '合并 3 个列表并删除重复的值'],
	['fun', 'lists', 'unzip/1', '把元组里的两个值分成为两个列表'],
	['fun', 'lists', 'unzip3/3', '把元组里的 3 个值分成为 3 个列表'],
	['fun', 'lists', 'usort/1', '排序一个列表并删除重复值'],
	['fun', 'lists', 'usort/2', '排序一个列表并删除重复值'],
	['fun', 'lists', 'zip/2', '把 2 个列表合成一个由 2 个值组成的元组列表'],
	['fun', 'lists', 'zip3/3', '把 3 个列表合成一个由 3 个值组成的元组列表'],
	['fun', 'lists', 'zipwith/3', '根据一个合成函数规则把 2 个列表合为一个列表'],
	['fun', 'lists', 'zipwith3/4', '根据一个合成函数规则把 3 个列表合为一个列表'],
	['fun', 'make', 'all/0', '编译一组 erlang 模块'],
	['fun', 'make', 'all/1', '编译一组 erlang 模块'],
	['fun', 'make', 'files/1', '编译一系列模块文件'],
	['fun', 'make', 'files/2', '编译一系列模块文件'],
	['fun', 'maps', 'find/2', '在映射组里查找键值'],
	['fun', 'maps', 'fold/3', '对映射组里的键值递归遍历执行一系列操作'],
	['fun', 'maps', 'from_list/1', '把一个列表转成一个映射组'],
	['fun', 'maps', 'get/2', '获取映射组跟键关联的值'],
	['fun', 'maps', 'is_key/2', '判断是否映射组里的键'],
	['fun', 'maps', 'keys/1', '返回映射组里的所有键'],
	['fun', 'maps', 'map/2', '对映射组里的值循环执行一系列操作并返回一个新映射组'],
	['fun', 'maps', 'merge/2', '把 2 个映射组合并成一个单独的映射组'],
	['fun', 'maps', 'new/0', '创建一个新的空映射组'],
	['fun', 'maps', 'put/3', '在映射组里插入一个值'],
	['fun', 'maps', 'remove/2', '删除映射组里的键'],
	['fun', 'maps', 'size/1', '返回映射组的大小'],
	['fun', 'maps', 'to_list/1', '把一个映射组转为一个键值对元组形式的列表'],
	['fun', 'maps', 'update/3', '更新映射组里的键值'],
	['fun', 'maps', 'values/1', '获取空映射组里的所有值'],
	['fun', 'maps', 'without/2', '返回不包含某些键的一个新空映射组'],
	['fun', 'math', 'acos/1', '返回一个数的反余弦值'],
	['fun', 'math', 'acosh/1', '返回一个数的反双曲线余弦值'],
	['fun', 'math', 'asin/1', '返回一个数的反正弦值'],
	['fun', 'math', 'asinh/1', '返回一个数的反双曲线正弦值'],
	['fun', 'math', 'atan/1', '返回数字的反正切值'],
	['fun', 'math', 'atan2/2', '返回从 x 轴到点 (x,y) 之间的角度'],
	['fun', 'math', 'atanh/1', '返回一个角度的反双曲线正切值'],
	['fun', 'math', 'cos/1', '返回一个数字的余弦值'],
	['fun', 'math', 'cosh/1', '返回一个数的双曲线余弦值'],
	['fun', 'math', 'erf/1', '返回一个数的误差函数'],
	['fun', 'math', 'erfc/1', '返回一个数的互补误差函数'],
	['fun', 'math', 'exp/1', '计算 e 的指数'],
	['fun', 'math', 'log/1', '计算一个数字的自然对数'],
	['fun', 'math', 'log10/1', '计算以10为基数的对数'],
	['fun', 'math', 'pi/0', '返回一个圆周率值'],
	['fun', 'math', 'pow/2', '返回 X 的 Y 次方'],
	['fun', 'math', 'sin/1', '求正弦值'],
	['fun', 'math', 'sinh/1', '返回一个数的双曲线正弦值'],
	['fun', 'math', 'sqrt/1', '返回一个数的平方根'],
	['fun', 'math', 'tan/1', '返回一个表示某个角的正切值'],
	['fun', 'math', 'tanh/1', '返回一个数的双曲线正切值'],
	['fun', 'mnesia', 'create_schema/1', '在指定的节点列表里初始化一个新的 Mnesia 数据库架构'],
	['fun', 'mnesia', 'create_table/2', '创建一个 Mnesia 表'],
	['fun', 'mnesia', 'delete_schema/1', '删除给出的节点里 Mnesia 数据库架构'],
	['fun', 'mnesia', 'start/0', '启动一个本地 Mnesia 系统'],
	['fun', 'mnesia', 'stop/0', '关停 Mnesia 系统'],
	['fun', 'mnesia', 'wait_for_tables/2', '等待一个 Mnesia 表直到表可以被访问'],
	['fun', 'net_adm', 'dns_hostname/1', '获取 Host 主机的正式名字'],
	['fun', 'net_adm', 'host_file/0', '读取 .hosts.erlang 文件'],
	['fun', 'net_adm', 'localhost/0', '获取本地主机名'],
	['fun', 'net_adm', 'names/0', '获取本地主机上 Erlang 节点的名字'],
	['fun', 'net_adm', 'names/1', '获取指定主机上 Erlang 节点的名字'],
	['fun', 'net_adm', 'ping/1', '对一个节点建立一个连接'],
	['fun', 'net_adm', 'world/0', '查找并连接本地主机上的所有节点'],
	['fun', 'net_adm', 'world/1', '查找并连接本地主机上的所有节点'],
	['fun', 'net_adm', 'world_list/1', '查找并连接指定主机上的所有节点'],
	['fun', 'net_adm', 'world_list/2', '查找并连接指定主机上的所有节点'],
	['fun', 'os', 'cmd/1', '在目标操作系统的 shell 里执行一条命令'],
	['fun', 'os', 'find_executable/1', '返回一个可执行程序的绝对路径'],
	['fun', 'os', 'find_executable/2', '返回一个可执行程序的绝对路径'],
	['fun', 'os', 'getenv/0', '返回一个包含所有环境变量的列表'],
	['fun', 'os', 'getenv/1', '获取一个环境变量的值'],
	['fun', 'os', 'getpid/0', '获取 erlang 虚拟机的进程标识'],
	['fun', 'os', 'putenv/1', '给一个环境变量设置一个新的值'],
	['fun', 'os', 'timestamp/0', '返回一个系统的时间戳'],
	['fun', 'os', 'type/0', '返回当前操作系统的家族和名称'],
	['fun', 'os', 'unsetenv/1', '删除一个环境变量'],
	['fun', 'os', 'version/0', '获取当前操作系统的版本号'],
	['fun', 'proplists', 'append_values/2', '把列表里所有相同键的值追加起来'],
	['fun', 'proplists', 'compact/1', '最小化列表里所有条目的表现形式'],
	['fun', 'proplists', 'delete/2', '删除列表里所有跟键相关联的元素'],
	['fun', 'proplists', 'expand/2', '把特定的属性扩展到对应的属性集合'],
	['fun', 'proplists', 'get_all_values/2', '获取指定键的所有值'],
	['fun', 'proplists', 'get_bool/2', '返回一个布尔键值选项的值'],
	['fun', 'proplists', 'get_keys/1', '获取列表里的所有键'],
	['fun', 'proplists', 'get_value/2', '获取一个键值属性列表的值'],
	['fun', 'proplists', 'get_value/3', '获取一个键值属性列表的值'],
	['fun', 'proplists', 'is_defined/2', '判断列表里是否有指定键的条目'],
	['fun', 'proplists', 'lookup/2', '返回在列表里第一个跟键相关联的条目'],
	['fun', 'proplists', 'lookup_all/2', '返回列表里跟键相关联的所有条目的列表'],
	['fun', 'proplists', 'normalize/2', '对列表里元素进行一系列的替换/扩展操作'],
	['fun', 'proplists', 'property/1', '返回一个属性的正常格式（最小化）的表示'],
	['fun', 'proplists', 'property/2', '返回一个简单键值属性的正常格式（最小化）的表示'],
	['fun', 'proplists', 'split/2', '按照键进行数据分割分组'],
	['fun', 'proplists', 'substitute_aliases/2', '替换列表里的键'],
	['fun', 'proplists', 'substitute_negations/2', '替换列表里的键并对值取反'],
	['fun', 'proplists', 'unfold/1', '把列表里的原子都打开呈现出来'],
	['fun', 'random', 'seed/0', '用默认值产生随机数种子'],
	['fun', 'random', 'seed/1', '用数字产生随机数种子'],
	['fun', 'random', 'seed/3', '用数字产生随机数种子'],
	['fun', 'random', 'seed0/0', '返回默认的随机种子状态'],
	['fun', 'random', 'uniform/0', '返回一个随机浮点数'],
	['fun', 'random', 'uniform/1', '返回一个随机整数'],
	['fun', 'random', 'uniform_s/1', '返回一个随机浮点数'],
	['fun', 'random', 'uniform_s/2', '返回一个随机整数'],
	['fun', 're', 'compile/1', '把一个正则表达式编译成一个正则匹配指令'],
	['fun', 're', 'compile/2', '把一个正则表达式编译成一个正则匹配指令'],
	['fun', 're', 'replace/3', '根据正则表达式来替换数据'],
	['fun', 're', 'replace/4', '根据正则表达式来替换数据'],
	['fun', 're', 'run/2', '根据正则表达式去匹配数据并返回匹配结果'],
	['fun', 're', 'run/3', '根据正则表达式去匹配数据并返回匹配结果'],
	['fun', 're', 'split/2', '用正则表达式去截取数据'],
	['fun', 're', 'split/3', '用正则表达式去截取数据'],
	['fun', 'rpc', 'call/4', '在一个节点上调用执行一个函数'],
	['fun', 'rpc', 'call/5', '在一个节点上调用执行一个函数'],
	['fun', 'rpc', 'cast/4', '在一个节点上调用执行一个函数'],
	['fun', 'rpc', 'eval_everywhere/3', '在所有节点上异步调用一个函数'],
	['fun', 'rpc', 'eval_everywhere/4', '在指定节点上异步调用一个函数'],
	['fun', 'rpc', 'multicall/3', '在所有节点上调用一个函数'],
	['fun', 'rpc', 'multicall/5', '在指定节点上调用一个函数'],
	['fun', 'string', 'centre/2', '让字符串中间对齐'],
	['fun', 'string', 'centre/3', '让字符串中间对齐'],
	['fun', 'string', 'chars/2', '返回包含指定数目个字符的字符串'],
	['fun', 'string', 'chars/3', '返回包含指定数目个字符的字符串'],
	['fun', 'string', 'chr/2', '获取字符在字符串里第一次出现的位置'],
	['fun', 'string', 'concat/2', '合并连接 2 个字符串'],
	['fun', 'string', 'copies/2', '复制一个字符串'],
	['fun', 'string', 'cspan/2', '字符在字符串里的跨度范围'],
	['fun', 'string', 'equal/2', '判断 2 个字符串是否相等'],
	['fun', 'string', 'join/2', '通过一个分隔符把字符列表连接起来'],
	['fun', 'string', 'left/2', '让字符串左对齐'],
	['fun', 'string', 'left/3', '让字符串左对齐'],
	['fun', 'string', 'len/1', '获取一个字符长度'],
	['fun', 'string', 'rchr/2', '获取字符在字符串里最后一次出现的位置'],
	['fun', 'string', 'right/2', '让字符串右对齐'],
	['fun', 'string', 'right/3', '让字符串右对齐'],
	['fun', 'string', 'rstr/2', '返回字符在字符串里最后一次出现的位置'],
	['fun', 'string', 'span/2', '字符在字符串里的跨度范围'],
	['fun', 'string', 'str/2', '返回字符在字符串里第一次出现的位置'],
	['fun', 'string', 'strip/1', '去除字符串两边的字符'],
	['fun', 'string', 'strip/2', '去除字符串两边的字符'],
	['fun', 'string', 'strip/3', '去除字符串两边的字符'],
	['fun', 'string', 'sub_string/2', '截取字符串的一部分'],
	['fun', 'string', 'sub_string/3', '截取字符串的一部分'],
	['fun', 'string', 'sub_word/2', '获取指定位置的单词'],
	['fun', 'string', 'sub_word/3', '获取指定位置的单词'],
	['fun', 'string', 'substr/2', '截取字符串'],
	['fun', 'string', 'substr/3', '截取字符串'],
	['fun', 'string', 'to_float/1', '解析字符串中的浮点数'],
	['fun', 'string', 'to_integer/1', '解析字符串中的整数'],
	['fun', 'string', 'to_lower/1', '把字符串里的字符转为小写字母'],
	['fun', 'string', 'to_upper/1', '把字符串里的字符转为大写字母'],
	['fun', 'string', 'tokens/2', '使用分隔符把字符串分割'],
	['fun', 'string', 'words/1', '返回字符串里的单词字符个数'],
	['fun', 'string', 'words/2', '返回字符串里的单词字符个数'],
	['fun', 'sys', 'get_status/1', '获取进程状态信息'],
	['fun', 'sys', 'get_status/2', '获取进程状态信息'],
	['fun', 'sys', 'log/2', '记录在内存里的系统事件'],
	['fun', 'sys', 'log/3', '记录在内存里的系统事件'],
	['fun', 'sys', 'statistics/2', '允许或禁止收集统计数据'],
	['fun', 'sys', 'statistics/3', '允许或禁止收集统计数据'],
	['fun', 'sys', 'suspend/1', '暂停一个进程'],
	['fun', 'sys', 'suspend/2', '暂停一个进程'],
	['fun', 'sys', 'trace/2', '在标准输出端上打印所有系统事件信息'],
	['fun', 'sys', 'trace/3', '在标准输出端上打印所有系统事件信息'],
	['fun', 'unicode', 'bom_to_encoding/1', '检测一个二进制数据的 UTF 字节顺序标记'],
	['fun', 'unicode', 'characters_to_binary/1', '把一个字符集数据转换为一个 UTF-8 的二进制数据'],
	['fun', 'unicode', 'characters_to_binary/2', '把一个字符集数据转换为一个 UTF-8 的二进制数据'],
	['fun', 'unicode', 'characters_to_binary/3', '把一个字符集数据转换为一个 UTF-8 的二进制数据'],
	['fun', 'unicode', 'characters_to_list/1', '把一个字符集数据转换为一个 Unicode 列表'],
	['fun', 'unicode', 'characters_to_list/2', '把一个字符集数据转换为一个 Unicode 列表'],
	['fun', 'unicode', 'encoding_to_bom/1', '从编码里生成一个二进制的 UTF 字节顺序标记'],
];
