var index = [
    ["mod", "modules", "lists", "列表处理函数"],

    ["fun", "lists", "lists:all/2", "如果列表里的所有元素都满足条件则返回 true"],
             
              ["fun","lists","lists:any/2",
              "Return true if any of the elements in the list sat"],
             ["fun","lists","lists:append/1","Append a list of lists"],
             ["fun","lists","lists:append/2","Append two lists"],
             ["fun","lists","lists:concat/1","Concatenate a list of atoms"],
             ["fun","lists","lists:delete/2","Delete an element from a list"],
             ["fun","lists","lists:dropwhile/2",
              "Drop elements from a list while a predicate is tru"],
             ["fun","lists","lists:duplicate/2","Make N copies of element"],
             ["fun","lists","lists:filter/2",
              "Choose elements which satisfy a predicate"],
             ["fun","lists","lists:flatlength/1",
              "Length of flattened deep list"],
             ["fun","lists","lists:flatmap/2","Map and flatten in one pass"],
             ["fun","lists","lists:flatten/1","Flatten a deep list"],
             ["fun","lists","lists:flatten/2","Flatten a deep list"],
             ["fun","lists","lists:foldl/3","Fold a function over a list"],
             ["fun","lists","lists:foldr/3","Fold a function over a list"],
             ["fun","lists","lists:foreach/2",
              "Apply a function to each element of a list"],
             ["fun","lists","lists:keydelete/3",
              "Delete an element from a list of tuples"],
             ["fun","lists","lists:keyfind/3",
              "Search for an element in a list of tuples"],
             ["fun","lists","lists:keymap/3",
              "Map a function over a list of tuples"],
             ["fun","lists","lists:keymember/3",
              "Test for membership of a list of tuples"],
             ["fun","lists","lists:keymerge/3",
              "Merge two key-sorted lists of tuples"],
             ["fun","lists","lists:keyreplace/4",
              "Replace an element in a list of tuples"],
             ["fun","lists","lists:keysearch/3",
              "Search for an element in a list of tuples"],
             ["fun","lists","lists:keysort/2","Sort a list of tuples"],
             ["fun","lists","lists:keystore/4",
              "Store an element in a list of tuples"],
             ["fun","lists","lists:keytake/3",
              "Extract an element from a list of tuples"],
             ["fun","lists","lists:last/1","Return last element in a list"],
             ["fun","lists","lists:map/2","Map a function over a list"],
             ["fun","lists","lists:mapfoldl/3","Map and fold in one pass"],
             ["fun","lists","lists:mapfoldr/3","Map and fold in one pass"],
             ["fun","lists","lists:max/1","Return maximum element of a list"],
             ["fun","lists","lists:member/2","Test for membership of a list"],
             ["fun","lists","lists:merge/1","Merge a list of sorted lists"],
             ["fun","lists","lists:merge/2","Merge two sorted lists"],
             ["fun","lists","lists:merge/3","Merge two sorted list"],
             ["fun","lists","lists:merge3/3","Merge three sorted lists"],
             ["fun","lists","lists:min/1","Return minimum element of a list"],
             ["fun","lists","lists:nth/2","Return the Nth element of a list"],
             ["fun","lists","lists:nthtail/2",
              "Return the Nth tail of a list"],
             ["fun","lists","lists:partition/2",
              "Partition a list into two lists based on a predica"],
             ["fun","lists","lists:prefix/2","Test for list prefix"],
             ["fun","lists","lists:reverse/1","Reverse a list"],
             ["fun","lists","lists:reverse/2",
              "Reverse a list appending a tail"],
             ["fun","lists","lists:seq/2","Generate a sequence of integers"],
             ["fun","lists","lists:seq/3","Generate a sequence of integers"],
             ["fun","lists","lists:sort/1","Sort a list"],
             ["fun","lists","lists:sort/2","Sort a list"],
             ["fun","lists","lists:split/2","Split a list into two lists"],
             ["fun","lists","lists:splitwith/2",
              "Split a list into two lists based on a predicate"],
             ["fun","lists","lists:sublist/2",
              "Return a sub-list of a certain length, starting at"],
             ["fun","lists","lists:sublist/3",
              "Return a sub-list starting at a given position and"],
             ["fun","lists","lists:subtract/2",
              "Subtract the element in one list from another list"],
             ["fun","lists","lists:suffix/2","Test for list suffix"],
             ["fun","lists","lists:sum/1","Return sum of elements in a list"],
             ["fun","lists","lists:takewhile/2",
              "Take elements from a list while a predicate is tru"],
             ["fun","lists","lists:ukeymerge/3",
              "Merge two key-sorted lists of tuples, removing dup"],
             ["fun","lists","lists:ukeysort/2",
              "Sort a list of tuples, removing duplicates"],
             ["fun","lists","lists:umerge/1",
              "Merge a list of sorted lists, removing duplicates"],
             ["fun","lists","lists:umerge/2",
              "Merge two sorted lists, removing duplicates"],
             ["fun","lists","lists:umerge/3",
              "Merge two sorted lists, removing duplicates"],
             ["fun","lists","lists:umerge3/3",
              "Merge three sorted lists, removing duplicates"],
             ["fun","lists","lists:unzip/1",
              "Unzip a list of two-tuples into two lists"],
             ["fun","lists","lists:unzip3/1",
              "Unzip a list of three-tuples into three lists"],
             ["fun","lists","lists:usort/1",
              "Sort a list, removing duplicates"],
             ["fun","lists","lists:usort/2",
              "Sort a list, removing duplicates"],
             ["fun","lists","lists:zip/2",
              "Zip two lists into a list of two-tuples"],
             ["fun","lists","lists:zip3/3",
              "Zip three lists into a list of three-tuples"],
             ["fun","lists","lists:zipwith/3",
              "Zip two lists into one list according to a fun"],
             ["fun","lists","lists:zipwith3/4",
              "Zip three lists into one list according to a fun"]

    
];


